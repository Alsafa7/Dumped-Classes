@interface MFAccount : NSObject
{
	id _persistentAccount;
	int _persistentAccountLock;
	id _unsavedAccountProperties;
	id _sourceApplicationBundleIdentifier;
}

+ valueForSettingsInAccountPropertiesForKey:
+ _copyBooleanValueInAccountPropertiesForKey:intoDictionary:
+ copyAccountPropertiesForSpecifiers:intoDictionary:
+ copySecureMIMEIdentitiesIntoDictionary:
+ setAccountPropertiesWithDictionary:
+ password
+ setPassword:
+ serviceName
+ requiresAuthentication
+ dealloc
+ init
+ isActive
+ type
+ domain
+ copyWithZone:
+ identifier
+ setActive:
+ uniqueId
+ displayName
+ properties
+ initWithProperties:
+ initWithPersistentAccount:
+ _setAccountProperties:
+ setPersistentAccount:
+ releaseAllConnections
+ persistentAccountDidChange:previousAccount:
+ accountPropertyForKey:
+ persistentAccount
+ parentAccount
+ parentAccountIdentifier
+ setAccountProperty:forKey:
+ setUsername:
+ accountInfoDidChange
+ _queueAccountInfoDidChange
+ removeAccountPropertyForKey:
+ usesSSL
+ _credentialCreateIfNecessary:
+ _credentialCreateIfNecessary:error:
+ _password
+ _passwordWithError:
+ preferredAuthScheme
+ credentialItemForKey:error:
+ credentialItemForKey:
+ setCredentialItem:forKey:error:
+ setCredentialItem:forKey:
+ accountForRenewingCredentials
+ defaultSecurePortNumber
+ defaultPortNumber
+ portNumber
+ _shouldTryDirectSSLConnectionOnPort:
+ connectionClass
+ _newConnection
+ _connectAndAuthenticate:
+ setUsesSSL:
+ setHostname:
+ setPortNumber:
+ certUIService
+ clientCertificates
+ setClientCertificates:
+ setTryDirectSSL:
+ secureServiceName
+ connectionServiceType
+ allowsTrustPrompt
+ sourceApplicationBundleIdentifier
+ setSourceApplicationBundleIdentifier:
+ defaultConnectionSettings
+ customTitleForAuthenticationError:authScheme:defaultTitle:
+ credentialAccessibility
+ customTitleForError:authScheme:defaultTitle:
+ customDescriptionForError:authScheme:defaultDescription:
+ reportAuthenticationError:authScheme:
+ enabledDataclasses
+ savePersistentAccount
+ removePersistentAccount
+ accountClass
+ setValueInAccountProperties:forKey:
+ removeValueInAccountPropertiesForKey:
+ valueInAccountPropertiesForKey:
+ _objectForAccountInfoKey:
+ _boolForAccountInfoKey:defaultValue:
+ canGoOffline
+ _credential
+ promptUserForPasswordWithTitle:message:completionHandler:
+ promptUserForWebLoginWithURL:shouldConfirm:completionHandler:
+ managedTag
+ fetchTokensIfNecessary:
+ releaseAllForcedConnections
+ validateConnections
+ setDomain:
+ setPreferredAuthScheme:
+ authenticatedConnection
+ applySettingsAsDefault:
+ alternateConnectionSettings
+ insecureConnectionSettings
+ secureConnectionSettings
+ syncStoreIdentifier
+ nameForMailboxUid:
+ shouldEnableAfterError:
+ enableAccount
+ shouldDisplayHostnameInErrorMessages
+ missingPasswordErrorWithTitle:
+ inaccessiblePasswordErrorWithTitle:
+ copyDiagnosticInformation
+ setDisplayName:
+ isEnabledForDataclass:
+ username
+ hostname
- valueForSettingsInAccountPropertiesForKey:
- _copyBooleanValueInAccountPropertiesForKey:intoDictionary:
- copyAccountPropertiesForSpecifiers:intoDictionary:
- copySecureMIMEIdentitiesIntoDictionary:
- setAccountPropertiesWithDictionary:
- password
- setPassword:
- serviceName
- requiresAuthentication
- dealloc
- init
- isActive
- type
- domain
- copyWithZone:
- identifier
- setActive:
- uniqueId
- displayName
- properties
- initWithProperties:
- initWithPersistentAccount:
- _setAccountProperties:
- setPersistentAccount:
- releaseAllConnections
- persistentAccountDidChange:previousAccount:
- accountPropertyForKey:
- persistentAccount
- parentAccount
- parentAccountIdentifier
- setAccountProperty:forKey:
- setUsername:
- accountInfoDidChange
- _queueAccountInfoDidChange
- removeAccountPropertyForKey:
- usesSSL
- _credentialCreateIfNecessary:
- _credentialCreateIfNecessary:error:
- _password
- _passwordWithError:
- preferredAuthScheme
- credentialItemForKey:error:
- credentialItemForKey:
- setCredentialItem:forKey:error:
- setCredentialItem:forKey:
- accountForRenewingCredentials
- defaultSecurePortNumber
- defaultPortNumber
- portNumber
- _shouldTryDirectSSLConnectionOnPort:
- connectionClass
- _newConnection
- _connectAndAuthenticate:
- setUsesSSL:
- setHostname:
- setPortNumber:
- certUIService
- clientCertificates
- setClientCertificates:
- setTryDirectSSL:
- secureServiceName
- connectionServiceType
- allowsTrustPrompt
- sourceApplicationBundleIdentifier
- setSourceApplicationBundleIdentifier:
- defaultConnectionSettings
- customTitleForAuthenticationError:authScheme:defaultTitle:
- credentialAccessibility
- customTitleForError:authScheme:defaultTitle:
- customDescriptionForError:authScheme:defaultDescription:
- reportAuthenticationError:authScheme:
- enabledDataclasses
- savePersistentAccount
- removePersistentAccount
- accountClass
- setValueInAccountProperties:forKey:
- removeValueInAccountPropertiesForKey:
- valueInAccountPropertiesForKey:
- _objectForAccountInfoKey:
- _boolForAccountInfoKey:defaultValue:
- canGoOffline
- _credential
- promptUserForPasswordWithTitle:message:completionHandler:
- promptUserForWebLoginWithURL:shouldConfirm:completionHandler:
- managedTag
- fetchTokensIfNecessary:
- releaseAllForcedConnections
- validateConnections
- setDomain:
- setPreferredAuthScheme:
- authenticatedConnection
- applySettingsAsDefault:
- alternateConnectionSettings
- insecureConnectionSettings
- secureConnectionSettings
- syncStoreIdentifier
- nameForMailboxUid:
- shouldEnableAfterError:
- enableAccount
- shouldDisplayHostnameInErrorMessages
- missingPasswordErrorWithTitle:
- inaccessiblePasswordErrorWithTitle:
- copyDiagnosticInformation
- setDisplayName:
- isEnabledForDataclass:
- username
- hostname
@end
