@interface CLLocationManager : NSObject
{
	id _internal;
}

+ onClientEvent:supportInfo:
+ setPausesLocationUpdatesAutomatically:
+ rangedRegions
+ onDidBecomeActive:
+ initWithEffectiveBundleIdentifier:bundle:
+ onClientEventAuthStatus:
+ onClientEventLocation:
+ onClientEventLocationUnavailable:
+ onClientEventHeading:
+ onClientEventHeadingCalibration:
+ onClientEventHistoricLocation:
+ onClientEventError:
+ onClientEventRegion:
+ onClientEventRegionState:
+ onClientEventRegionError:
+ onClientEventRanging:
+ onClientEventRangingError:
+ onClientEventRegionResponseDelayed:
+ onClientEventRegionSetupCompleted:
+ onClientEventAutopauseStatus:
+ onClientEventBatch:
+ onClientEventInterrupted:
+ resumeLocationUpdates
+ pauseLocationUpdates:
+ initWithEffectiveBundle:
+ distanceFilter
+ desiredAccuracy
+ pausesLocationUpdatesAutomatically
+ locationServicesAvailable
+ expectedGpsUpdateInterval
+ setSupportInfo:
+ supportInfo
+ bestAccuracy
+ internalClient
+ setPrivateMode:
+ privateMode
+ setPurpose:
+ purpose
+ startUpdatingLocationWithPrompt
+ allowDeferredLocationUpdatesUntilTraveled:timeout:
+ disallowDeferredLocationUpdates
+ historicLocationsFromDate:forInterval:
+ headingFilter
+ headingOrientation
+ dismissHeadingCalibrationDisplay
+ startAppStatusUpdates
+ stopAppStatusUpdates
+ startTechStatusUpdates
+ stopTechStatusUpdates
+ startMonitoringSignificantLocationChanges
+ stopMonitoringSignificantLocationChanges
+ startMonitoringForRegion:desiredAccuracy:
+ requestStateForRegion:
+ maximumRegionMonitoringDistance
+ startRangingBeaconsInRegion:
+ stopRangingBeaconsInRegion:
+ resetApps
+ appsUsingLocation
+ appsUsingLocationWithDetails
+ technologiesInUse
+ isPersistentMonitoringEnabled
+ setPersistentMonitoringEnabled:
+ isLocationServicesPreferencesDialogEnabled
+ setLocationServicesPreferencesDialogEnabled:
+ registerAsLocationClient
+ monitoredRegions
+ stopMonitoringForRegion:
+ startMonitoringForRegion:
+ dealloc
+ setDelegate:
+ init
+ delegate
+ location
+ activityType
+ initWithEffectiveBundleIdentifier:
+ setDistanceFilter:
+ setHeadingFilter:
+ setDesiredAccuracy:
+ startUpdatingLocation
+ stopUpdatingLocation
+ setHeadingOrientation:
+ locationServicesApproved
+ locationServicesEnabled
+ stopUpdatingHeading
+ headingAvailable
+ startUpdatingHeading
+ heading
+ setActivityType:
- onClientEvent:supportInfo:
- setPausesLocationUpdatesAutomatically:
- rangedRegions
- onDidBecomeActive:
- initWithEffectiveBundleIdentifier:bundle:
- onClientEventAuthStatus:
- onClientEventLocation:
- onClientEventLocationUnavailable:
- onClientEventHeading:
- onClientEventHeadingCalibration:
- onClientEventHistoricLocation:
- onClientEventError:
- onClientEventRegion:
- onClientEventRegionState:
- onClientEventRegionError:
- onClientEventRanging:
- onClientEventRangingError:
- onClientEventRegionResponseDelayed:
- onClientEventRegionSetupCompleted:
- onClientEventAutopauseStatus:
- onClientEventBatch:
- onClientEventInterrupted:
- resumeLocationUpdates
- pauseLocationUpdates:
- initWithEffectiveBundle:
- distanceFilter
- desiredAccuracy
- pausesLocationUpdatesAutomatically
- locationServicesAvailable
- expectedGpsUpdateInterval
- setSupportInfo:
- supportInfo
- bestAccuracy
- internalClient
- setPrivateMode:
- privateMode
- setPurpose:
- purpose
- startUpdatingLocationWithPrompt
- allowDeferredLocationUpdatesUntilTraveled:timeout:
- disallowDeferredLocationUpdates
- historicLocationsFromDate:forInterval:
- headingFilter
- headingOrientation
- dismissHeadingCalibrationDisplay
- startAppStatusUpdates
- stopAppStatusUpdates
- startTechStatusUpdates
- stopTechStatusUpdates
- startMonitoringSignificantLocationChanges
- stopMonitoringSignificantLocationChanges
- startMonitoringForRegion:desiredAccuracy:
- requestStateForRegion:
- maximumRegionMonitoringDistance
- startRangingBeaconsInRegion:
- stopRangingBeaconsInRegion:
- resetApps
- appsUsingLocation
- appsUsingLocationWithDetails
- technologiesInUse
- isPersistentMonitoringEnabled
- setPersistentMonitoringEnabled:
- isLocationServicesPreferencesDialogEnabled
- setLocationServicesPreferencesDialogEnabled:
- registerAsLocationClient
- monitoredRegions
- stopMonitoringForRegion:
- startMonitoringForRegion:
- dealloc
- setDelegate:
- init
- delegate
- location
- activityType
- initWithEffectiveBundleIdentifier:
- setDistanceFilter:
- setHeadingFilter:
- setDesiredAccuracy:
- startUpdatingLocation
- stopUpdatingLocation
- setHeadingOrientation:
- locationServicesApproved
- locationServicesEnabled
- stopUpdatingHeading
- headingAvailable
- startUpdatingHeading
- heading
- setActivityType:
@end
