@interface MFMailMessageLibrary : MFMessageLibrary
{
	id _connectionPool;
	id _contentIndex;
	id _libraryMessageCache;
	pointer _mailboxCache;
	id _metadataQueue;
	id _mailboxPathProvider;
	id _migrator;
	id _threadLocalHandleKey;
	id _activeAccountClause;
	int _protectedDataAvailability;
	id _protectedJournal;
	id _keyBagQueue;
	id _messagesToThreadAtUnlock;
	id _delegate;
	id _attachmentDataProvider;
}

+ dealloc
+ setDelegate:
+ delegate
+ initWithPath:
+ dataProvider
+ setFlagsFromDictionary:forMessages:
+ setNumberOfAttachments:isSigned:isEncrypted:forMessage:
+ shouldCancel
+ loadMeetingExternalIDForMessage:
+ loadMeetingDataForMessage:
+ loadMeetingMetadataForMessage:
+ _newConnection
+ deleteMailboxes:
+ deleteAccount:
+ renameMailboxes:to:
+ libraryIDForAccount:
+ createLibraryIDForAccount:
+ serverUnreadOnlyOnServerCountForMailbox:
+ unreadCountForMailbox:
+ unreadCountForMailbox:matchingCriterion:
+ nonDeletedCountForMailbox:
+ mailboxIDForURLString:
+ urlForMailboxID:
+ mailboxUidForMessage:
+ setMessage:isPartial:
+ isMessageContentsLocallyAvailable:
+ setFlags:forMessage:
+ setSummary:forMessage:
+ dataPathForMessage:
+ dataPathForMessage:part:
+ accountForMessage:
+ setData:forMessage:isPartial:
+ dataConsumerForMessage:part:
+ updateMessage:withMetadata:
+ metadataForMessage:key:
+ totalCountForMailbox:
+ nonDeletedCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
+ messageWithLibraryID:options:inMailbox:
+ messagesWithSummariesForMailbox:range:
+ messagesMatchingCriterion:options:range:
+ copyMessageInfosForMailbox:
+ copyMessageInfosMatchingCriterion:
+ copyMessageInfosForConversationsContainingMessagesMatchingCriterion:forMailbox:
+ messagesWithoutSummariesForMailbox:fromRowID:limit:
+ messagesMatchingCriterion:options:
+ copyMessagesWithRemoteIDs:options:inRemoteMailbox:
+ copySendersByLibraryIDForConversation:mailbox:limit:
+ oldestKnownConversationInMailbox:
+ serverSearchResultMessagesForMailbox:
+ dateOfOldestNonSearchResultMessageInMailbox:
+ filterContiguousMessages:forCriterion:options:
+ messageWithMessageID:options:inMailbox:
+ headerDataForMessage:
+ dataForMimePart:isComplete:
+ dataConsumerForMessage:part:incomplete:
+ fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:
+ bodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:
+ messagesForMailbox:olderThanNumberOfDays:
+ setFlagsFromDictionary:forMessagesInMailboxURLString:
+ addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:
+ compactMailbox:
+ hasCompleteDataForMimePart:
+ preparedStatement:pattern:
+ performReadTransaction:
+ performWriteTransaction:
+ compactMessages:permanently:
+ setFlagsForMessages:mask:
+ updateRecipientsForMessage:fromHeaders:
+ updateThreadingInfoForMessage:fromHeaders:
+ messagesNeedingSyncConfirmationForMailbox:
+ messagesWithoutSummariesForMailbox:
+ messagesWithSummariesForMailbox:fromRowID:limit:
+ orderedBatchOfMessagesEndingAtRowId:limit:success:
+ deletedCountForMailbox:
+ setServerUnreadOnlyOnServerCount:forMailbox:
+ oldestMessageInMailbox:
+ messageWithRemoteID:inRemoteMailbox:
+ maximumRemoteIDForMailbox:
+ minimumRemoteIDForMailbox:
+ sequenceIdentifierForMailbox:
+ setSequenceIdentifier:forMailbox:
+ sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
+ setSequenceIdentifier:forMessageWithLibraryID:
+ setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
+ getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
+ getDetailsForAllMessagesFromMailbox:
+ getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
+ messagesWithMessageIDHeader:
+ removeAllMessagesFromMailbox:removeMailbox:andNotify:
+ messageWithMessageID:inMailbox:
+ dataConsumerForMessage:isPartial:
+ dataConsumerForMessage:
+ metadataForMessage:
+ bodyDataForMessage:
+ sendMessagesMatchingCriterion:to:options:range:
+ sendMessagesMatchingCriterion:to:options:
+ messagesMatchingCriterion:options:success:
+ messagesMatchingCriterion:options:range:success:
+ closeDatabaseConnections
+ deletePOPUID:inMailbox:
+ UIDsToDeleteInMailbox:
+ deletedUIDsInMailbox:
+ allUIDsInMailbox:
+ hiddenPOPUIDsInMailbox:
+ appendOfflineCacheOperation:forAccount:lastTemporaryID:
+ markOfflineCacheOperationAsComplete:
+ offlineCacheOperationsForAccount:lastTemporaryID:
+ appendOfflineCacheReplayData:forAccountID:
+ consumeOfflineCacheReplayDataForAccount:usingBlock:
+ deleteOfflineCacheDataForAccount:
+ updateFlagsForMessagesInPlace:success:
+ remoteStoreForMessage:
+ storedIntegerPropertyWithName:
+ setStoredIntegerPropertyWithName:value:
+ _removeCachedLibraryMessageWithLibraryID:
+ _setProtectedDataAvailabilityState:
+ _reconcileAfterKeybagUnlock
+ invalidateAndWait
+ getWriterDB
+ unlockDB:
+ beginTransaction:withType:
+ isProtectedDataAvailable:
+ _addMessageToThreadAtUnlock:
+ addThreadingInfoBySubjectForMessageID:nonPrefixedSubject:messageIDsBySubject:usingDatabase:toReferences:withinMailbox:
+ conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:messageIDHash:
+ notifyConversation:hasMergedIntoConversation:
+ handleSqliteError:format:
+ referencesFromHeaders:
+ addReferencesForMessage:libraryID:messageIDHash:withSubject:withReferences:usingDatabase:otherSubjectIDMappings:usingMailbox:notify:
+ _writeEmlxFile:withBodyData:protectionClass:
+ _libraryMessageWithLibraryID:wasCached:
+ rollbackTransaction:
+ commitTransaction:
+ iterateStatement:db:withProgressMonitor:andRowHandler:context:
+ sendMessagesForStatement:db:to:options:timestamp:
+ sendMessagesMatchingCriterion:to:options:baseTable:
+ getReaderDB
+ queryForCriterion:db:options:
+ queryForCriterion:db:options:baseTable:
+ integerForQuery:withTextArgument:
+ flaggedCountForMailbox:
+ attachmentCountForMailbox:
+ includesMeCountForMailbox:
+ countOfRelatedMessagesMatchingCriterion:forConversationsContainingMessagesMatchingCriterion:forMailbox:
+ _messageForStatement:options:timestamp:isProtectedDataAvailable:
+ _canSelectMessagesWithOptions:db:
+ _copyReferenceHashesWithoutMessagesForMessageWithConversation:
+ _getReferencesForHashesWithOwners:
+ stringForQuery:monitor:
+ pathForMailboxURL:
+ mailboxURLForMessage:
+ _notifyDidCompact:messages:mailboxes:
+ cleanupProtectedTables:checkForInconsistencies:
+ dataPathForMessage:type:
+ _setMessageData:libraryID:part:partial:complete:
+ _setMessageDataString:forKey:forMessage:
+ _assignTransactionIdentifier:forLibraryIDs:
+ loadData:forMessage:usingBlock:
+ bodyDataAtPath:headerData:
+ headerDataAtPath:
+ equalToMailboxIDsFromCriterion:
+ _activeAccountsClause
+ queryForCriterion:db:options:baseTable:isSubquery:range:
+ queryForCriterion:db:options:baseTable:isSubquery:
+ sendMessagesMatchingQuery:db:to:options:
+ sendMessagesMatchingCriterion:to:options:baseTable:range:success:
+ _indexSetOfMessagesDeleted
+ _handleCorruptDatabase
+ _activeConnectionWithDB:
+ _handleSQLiteErrorCode:db:
+ _reconcileJournal:
+ isKeyBagUnlocked
+ _performTransaction:forWriting:
+ _connectionForWriting:
+ _activeConnectionWrapper
+ _setActiveConnection:forWriting:
+ _activeConnection
+ _handleFullDatabase
+ _handleProtectedDataIOError
+ _handleIOError
+ _handleBusyError
+ renameOrRemoveDatabase
+ itemsRequiringIndexingForContentIndex:limit:
+ contentIndex:assignTransactionIdentifier:forDocumentIdentifiers:
+ contentIndex:invalidateItemsGreaterThanTransactionId:
+ newConnectionForConnectionPool:
+ contentProtectionStateChanged:previousState:
+ mailboxLocationOfMessageID:usingDatabase:
+ countOfMessagesMissingFromThreadContainingMessage:
+ loadMoreMessagesForThreadContainingMessage:hasNoMoreMessages:
+ stringForQuery:
+ vacuumDataForObsoleteAccountURLString:
+ attachmentsDirectoryForLibraryID:mailboxID:
+ queryForCriterion:db:options:range:
+ sendMessagesMatchingCriterion:to:options:baseTable:range:
+ iterateMessagesMatchingCriterion:withResultHandler:options:withMonitor:
+ rebuildActiveAccountsClauseWithAccounts:
+ protectedDataAvailability
+ attachProtectedDatabase:
+ migrate
+ setMailboxPathProvider:
+ allMailboxURLStrings
+ _libraryMessageCache
- dealloc
- setDelegate:
- delegate
- initWithPath:
- dataProvider
- setFlagsFromDictionary:forMessages:
- setNumberOfAttachments:isSigned:isEncrypted:forMessage:
- shouldCancel
- loadMeetingExternalIDForMessage:
- loadMeetingDataForMessage:
- loadMeetingMetadataForMessage:
- _newConnection
- deleteMailboxes:
- deleteAccount:
- renameMailboxes:to:
- libraryIDForAccount:
- createLibraryIDForAccount:
- serverUnreadOnlyOnServerCountForMailbox:
- unreadCountForMailbox:
- unreadCountForMailbox:matchingCriterion:
- nonDeletedCountForMailbox:
- mailboxIDForURLString:
- urlForMailboxID:
- mailboxUidForMessage:
- setMessage:isPartial:
- isMessageContentsLocallyAvailable:
- setFlags:forMessage:
- setSummary:forMessage:
- dataPathForMessage:
- dataPathForMessage:part:
- accountForMessage:
- setData:forMessage:isPartial:
- dataConsumerForMessage:part:
- updateMessage:withMetadata:
- metadataForMessage:key:
- totalCountForMailbox:
- nonDeletedCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
- messageWithLibraryID:options:inMailbox:
- messagesWithSummariesForMailbox:range:
- messagesMatchingCriterion:options:range:
- copyMessageInfosForMailbox:
- copyMessageInfosMatchingCriterion:
- copyMessageInfosForConversationsContainingMessagesMatchingCriterion:forMailbox:
- messagesWithoutSummariesForMailbox:fromRowID:limit:
- messagesMatchingCriterion:options:
- copyMessagesWithRemoteIDs:options:inRemoteMailbox:
- copySendersByLibraryIDForConversation:mailbox:limit:
- oldestKnownConversationInMailbox:
- serverSearchResultMessagesForMailbox:
- dateOfOldestNonSearchResultMessageInMailbox:
- filterContiguousMessages:forCriterion:options:
- messageWithMessageID:options:inMailbox:
- headerDataForMessage:
- dataForMimePart:isComplete:
- dataConsumerForMessage:part:incomplete:
- fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:
- bodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:
- messagesForMailbox:olderThanNumberOfDays:
- setFlagsFromDictionary:forMessagesInMailboxURLString:
- addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:
- compactMailbox:
- hasCompleteDataForMimePart:
- preparedStatement:pattern:
- performReadTransaction:
- performWriteTransaction:
- compactMessages:permanently:
- setFlagsForMessages:mask:
- updateRecipientsForMessage:fromHeaders:
- updateThreadingInfoForMessage:fromHeaders:
- messagesNeedingSyncConfirmationForMailbox:
- messagesWithoutSummariesForMailbox:
- messagesWithSummariesForMailbox:fromRowID:limit:
- orderedBatchOfMessagesEndingAtRowId:limit:success:
- deletedCountForMailbox:
- setServerUnreadOnlyOnServerCount:forMailbox:
- oldestMessageInMailbox:
- messageWithRemoteID:inRemoteMailbox:
- maximumRemoteIDForMailbox:
- minimumRemoteIDForMailbox:
- sequenceIdentifierForMailbox:
- setSequenceIdentifier:forMailbox:
- sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
- setSequenceIdentifier:forMessageWithLibraryID:
- setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
- getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
- getDetailsForAllMessagesFromMailbox:
- getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
- messagesWithMessageIDHeader:
- removeAllMessagesFromMailbox:removeMailbox:andNotify:
- messageWithMessageID:inMailbox:
- dataConsumerForMessage:isPartial:
- dataConsumerForMessage:
- metadataForMessage:
- bodyDataForMessage:
- sendMessagesMatchingCriterion:to:options:range:
- sendMessagesMatchingCriterion:to:options:
- messagesMatchingCriterion:options:success:
- messagesMatchingCriterion:options:range:success:
- closeDatabaseConnections
- deletePOPUID:inMailbox:
- UIDsToDeleteInMailbox:
- deletedUIDsInMailbox:
- allUIDsInMailbox:
- hiddenPOPUIDsInMailbox:
- appendOfflineCacheOperation:forAccount:lastTemporaryID:
- markOfflineCacheOperationAsComplete:
- offlineCacheOperationsForAccount:lastTemporaryID:
- appendOfflineCacheReplayData:forAccountID:
- consumeOfflineCacheReplayDataForAccount:usingBlock:
- deleteOfflineCacheDataForAccount:
- updateFlagsForMessagesInPlace:success:
- remoteStoreForMessage:
- storedIntegerPropertyWithName:
- setStoredIntegerPropertyWithName:value:
- _removeCachedLibraryMessageWithLibraryID:
- _setProtectedDataAvailabilityState:
- _reconcileAfterKeybagUnlock
- invalidateAndWait
- getWriterDB
- unlockDB:
- beginTransaction:withType:
- isProtectedDataAvailable:
- _addMessageToThreadAtUnlock:
- addThreadingInfoBySubjectForMessageID:nonPrefixedSubject:messageIDsBySubject:usingDatabase:toReferences:withinMailbox:
- conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:messageIDHash:
- notifyConversation:hasMergedIntoConversation:
- handleSqliteError:format:
- referencesFromHeaders:
- addReferencesForMessage:libraryID:messageIDHash:withSubject:withReferences:usingDatabase:otherSubjectIDMappings:usingMailbox:notify:
- _writeEmlxFile:withBodyData:protectionClass:
- _libraryMessageWithLibraryID:wasCached:
- rollbackTransaction:
- commitTransaction:
- iterateStatement:db:withProgressMonitor:andRowHandler:context:
- sendMessagesForStatement:db:to:options:timestamp:
- sendMessagesMatchingCriterion:to:options:baseTable:
- getReaderDB
- queryForCriterion:db:options:
- queryForCriterion:db:options:baseTable:
- integerForQuery:withTextArgument:
- flaggedCountForMailbox:
- attachmentCountForMailbox:
- includesMeCountForMailbox:
- countOfRelatedMessagesMatchingCriterion:forConversationsContainingMessagesMatchingCriterion:forMailbox:
- _messageForStatement:options:timestamp:isProtectedDataAvailable:
- _canSelectMessagesWithOptions:db:
- _copyReferenceHashesWithoutMessagesForMessageWithConversation:
- _getReferencesForHashesWithOwners:
- stringForQuery:monitor:
- pathForMailboxURL:
- mailboxURLForMessage:
- _notifyDidCompact:messages:mailboxes:
- cleanupProtectedTables:checkForInconsistencies:
- dataPathForMessage:type:
- _setMessageData:libraryID:part:partial:complete:
- _setMessageDataString:forKey:forMessage:
- _assignTransactionIdentifier:forLibraryIDs:
- loadData:forMessage:usingBlock:
- bodyDataAtPath:headerData:
- headerDataAtPath:
- equalToMailboxIDsFromCriterion:
- _activeAccountsClause
- queryForCriterion:db:options:baseTable:isSubquery:range:
- queryForCriterion:db:options:baseTable:isSubquery:
- sendMessagesMatchingQuery:db:to:options:
- sendMessagesMatchingCriterion:to:options:baseTable:range:success:
- _indexSetOfMessagesDeleted
- _handleCorruptDatabase
- _activeConnectionWithDB:
- _handleSQLiteErrorCode:db:
- _reconcileJournal:
- isKeyBagUnlocked
- _performTransaction:forWriting:
- _connectionForWriting:
- _activeConnectionWrapper
- _setActiveConnection:forWriting:
- _activeConnection
- _handleFullDatabase
- _handleProtectedDataIOError
- _handleIOError
- _handleBusyError
- renameOrRemoveDatabase
- itemsRequiringIndexingForContentIndex:limit:
- contentIndex:assignTransactionIdentifier:forDocumentIdentifiers:
- contentIndex:invalidateItemsGreaterThanTransactionId:
- newConnectionForConnectionPool:
- contentProtectionStateChanged:previousState:
- mailboxLocationOfMessageID:usingDatabase:
- countOfMessagesMissingFromThreadContainingMessage:
- loadMoreMessagesForThreadContainingMessage:hasNoMoreMessages:
- stringForQuery:
- vacuumDataForObsoleteAccountURLString:
- attachmentsDirectoryForLibraryID:mailboxID:
- queryForCriterion:db:options:range:
- sendMessagesMatchingCriterion:to:options:baseTable:range:
- iterateMessagesMatchingCriterion:withResultHandler:options:withMonitor:
- rebuildActiveAccountsClauseWithAccounts:
- protectedDataAvailability
- attachProtectedDatabase:
- migrate
- setMailboxPathProvider:
- allMailboxURLStrings
- _libraryMessageCache
@end
