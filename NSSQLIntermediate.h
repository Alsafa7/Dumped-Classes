@interface NSSQLIntermediate : NSObject
{
	id _scope;
}

+ generateSQLStringInContext:
+ isOrScoped
+ initWithScope:
+ isSelectTargetScoped
+ governingEntityForKeypathExpression:
+ _lastScopedItem
+ isSimpleKeypath:
+ isVariableBasedKeypathScopedBySubquery:
+ isFunctionScoped
+ _promoteJoinsForSubqueryScopedKeypaths
+ fetchIntermediateForKeypathExpression:
+ governingAliasForKeypathExpression:
+ keypathExpressionIsSafeLHSForIn:
+ fetchIntermediate
+ governingAlias
+ _generateSQLForExpression:allowToMany:inContext:
+ _generateSQLForConstantValue:inContext:
+ _generateSQLForSubqueryExpression:trailingKeypath:inContext:
+ _functionExpressionIsSubqueryFollowedByKeypath:
+ isHavingScoped
+ expressionIsBasicKeypath:
+ _generateSQLForVariableExpression:inContext:
+ _promoteJoinsForSubqueryScopedKeypath:
+ promoteJoinsInKeypathsForExpression:
+ _promoteJoinsForKeypathExpression:
+ _promoteJoinsForFunctionExpression:
+ _promoteJoinsForAggregateExpression:
+ _promoteJoinsForTernaryExpression:
+ _generateSQLForKeyPathExpression:allowToMany:inContext:
+ _generateSQLForConstantCollection:inContext:
+ _canDoASubselectForExpression:inContext:
+ _generateSQLForFunctionExpression:allowToMany:inContext:
+ _generateSQLForExpressionCollection:allowToMany:inContext:
+ _generateSQLForFetchExpression:allowToMany:inContext:
+ _generateSQLForTernaryExpression:allowToMany:inContext:
+ scope
- generateSQLStringInContext:
- isOrScoped
- initWithScope:
- isSelectTargetScoped
- governingEntityForKeypathExpression:
- _lastScopedItem
- isSimpleKeypath:
- isVariableBasedKeypathScopedBySubquery:
- isFunctionScoped
- _promoteJoinsForSubqueryScopedKeypaths
- fetchIntermediateForKeypathExpression:
- governingAliasForKeypathExpression:
- keypathExpressionIsSafeLHSForIn:
- fetchIntermediate
- governingAlias
- _generateSQLForExpression:allowToMany:inContext:
- _generateSQLForConstantValue:inContext:
- _generateSQLForSubqueryExpression:trailingKeypath:inContext:
- _functionExpressionIsSubqueryFollowedByKeypath:
- isHavingScoped
- expressionIsBasicKeypath:
- _generateSQLForVariableExpression:inContext:
- _promoteJoinsForSubqueryScopedKeypath:
- promoteJoinsInKeypathsForExpression:
- _promoteJoinsForKeypathExpression:
- _promoteJoinsForFunctionExpression:
- _promoteJoinsForAggregateExpression:
- _promoteJoinsForTernaryExpression:
- _generateSQLForKeyPathExpression:allowToMany:inContext:
- _generateSQLForConstantCollection:inContext:
- _canDoASubselectForExpression:inContext:
- _generateSQLForFunctionExpression:allowToMany:inContext:
- _generateSQLForExpressionCollection:allowToMany:inContext:
- _generateSQLForFetchExpression:allowToMany:inContext:
- _generateSQLForTernaryExpression:allowToMany:inContext:
- scope
@end
