@interface CLLocation : NSObject
{
	id _internal;
}

+ _mapkit_source
+ hasValidCourse
+ isEqualToLocationCoordinate:
+ locationDescription
+ isStale
+ _vectorkit_rawCoordinate
+ speedAccuracy
+ _vectorkit_rawCourse
+ courseAccuracy
+ hasMatch
+ initWithCoordinate:rawCoordinate:course:rawCourse:courseAccuracy:speed:speedAccuracy:altitude:timestamp:horizontalAccuracy:verticalAccuracy:type:
+ initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
+ _initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
+ initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
+ rawCoordinate
+ rawCourse
+ getDistanceFrom:
+ snapToResolution:
+ propagateLocationToTime:
+ clientLocation
+ dealloc
+ initWithCoder:
+ encodeWithCoder:
+ init
+ description
+ timestamp
+ type
+ copyWithZone:
+ speed
+ shortDescription
+ setHorizontalAccuracy:
+ horizontalAccuracy
+ coordinate
+ verticalAccuracy
+ altitude
+ iso6709Notation
+ initWithLatitude:longitude:
+ distanceFromLocation:
+ course
+ initWithClientLocation:
- _mapkit_source
- hasValidCourse
- isEqualToLocationCoordinate:
- locationDescription
- isStale
- _vectorkit_rawCoordinate
- speedAccuracy
- _vectorkit_rawCourse
- courseAccuracy
- hasMatch
- initWithCoordinate:rawCoordinate:course:rawCourse:courseAccuracy:speed:speedAccuracy:altitude:timestamp:horizontalAccuracy:verticalAccuracy:type:
- initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
- _initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
- initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
- rawCoordinate
- rawCourse
- getDistanceFrom:
- snapToResolution:
- propagateLocationToTime:
- clientLocation
- dealloc
- initWithCoder:
- encodeWithCoder:
- init
- description
- timestamp
- type
- copyWithZone:
- speed
- shortDescription
- setHorizontalAccuracy:
- horizontalAccuracy
- coordinate
- verticalAccuracy
- altitude
- iso6709Notation
- initWithLatitude:longitude:
- distanceFromLocation:
- course
- initWithClientLocation:
@end
