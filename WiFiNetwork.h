@interface WiFiNetwork : NSObject
{
	id _dict;
	id _customizedSettings;
	BOOL _available;
	BOOL _dirty;
	BOOL _needsFavoritesCheck;
	id _lastProxyDict;
	id _certificateChain;
	id _eapolProfile;
	id _requestedInformation;
	id _tlsIdentity;
	id _wapiRoot;
	id _wapiIdentity;
	BOOL _usernameIsManaged;
	BOOL _hidden;
	BOOL _adhoc;
	pointer _HS20Network;
	BOOL _isHS20;
	BOOL _needsHS20Query;
}

+ password
+ setPassword:
+ proxyType
+ dealloc
+ initWithCoder:
+ encodeWithCoder:
+ setHidden:
+ description
+ dictionary
+ copyWithZone:
+ setName:
+ name
+ isSecure
+ strength
+ scanResultDictionary
+ configType
+ setConfigType:userEntered:
+ setIP:userEntered:
+ ip
+ setSubnetMask:userEntered:
+ subnetMask
+ setRouter:userEntered:
+ router
+ setDNSServers:userEntered:
+ removeCustomDNSServers
+ DNSServers
+ setSearchDomains:userEntered:
+ removeCustomSearchDomains
+ searchDomains
+ setDHCPClientID:userEntered:
+ DHCPClientID
+ setProxy:userEntered:
+ setProxyPort:userEntered:
+ proxyAuthenticated
+ setProxyAuthenticated:userEntered:
+ setProxyUsername:userEntered:
+ setProxyPassword:userEntered:
+ setProxyType:userEntered:
+ pacFile
+ setPacFile:userEntered:
+ removeCustomIP
+ removeCustomRouter
+ removeCustomSubnet
+ setIPv6Enabled:userEntered:
+ IPv6Enabled
+ isAdhoc
+ BSSID
+ isEnterprise
+ compareAscending:
+ compareUnconfigAscending:
+ canAttemptJoin
+ setCertificateChain:
+ resignActiveNetwork
+ certificateChain
+ eapolProfile
+ eapTypes
+ requiresTLSIdentityOnly
+ TLSIdentity
+ setEapolProfile:
+ securityMode
+ isHostspot20
+ isHostspot20Provisioned
+ HS20Data
+ WAPIRoot
+ WAPIIdentityPEMBlob
+ setTLSIdentity:
+ setWAPIRoot:
+ setWAPIIdentityPEMBlob:
+ setRequestedInformation:
+ resetCustomSettings
+ proxyTypeForDict:
+ loadIPv4Dict:
+ loadIPv6Dict:
+ loadProxyDict:
+ loadDNSDict:
+ requiresSavedPassword
+ setScanResultDictionary:
+ needsHotSpot20Query
+ setHS20Data:
+ HS20Badge
+ setSecurityMode:
+ setUsername:isManaged:
+ initWithWirelessDict:
+ setIPv4Dict:
+ setProxyDict:
+ setDNSDict:
+ customSettings
+ _initWithDictionary:available:
+ _setCustomValue:forKey:protocol:
+ setBSSID:
+ profileContainsEAPSIM:
+ profileContainsEAPAKA:
+ profileContainsCarrierEAPType:
+ requiresPasswordOnly
+ requiresUsernameAndPassword
+ setNeedsFavoritesCheck:
+ needsFavoritesCheck
+ setIsFavorite:
+ lastProxyDictionary
+ isWAPIEnterprise
+ usernameIsManaged
+ requestedInformation
+ compareDescending:
+ isPersonalHotspot
+ dirty
+ available
+ setAvailable:
+ proxy
+ proxyPort
+ proxyUsername
+ proxyPassword
+ setUsername:
+ username
+ isFavorite
+ age
+ hidden
+ profile
+ setProfile:
+ setDirty:
- password
- setPassword:
- proxyType
- dealloc
- initWithCoder:
- encodeWithCoder:
- setHidden:
- description
- dictionary
- copyWithZone:
- setName:
- name
- isSecure
- strength
- scanResultDictionary
- configType
- setConfigType:userEntered:
- setIP:userEntered:
- ip
- setSubnetMask:userEntered:
- subnetMask
- setRouter:userEntered:
- router
- setDNSServers:userEntered:
- removeCustomDNSServers
- DNSServers
- setSearchDomains:userEntered:
- removeCustomSearchDomains
- searchDomains
- setDHCPClientID:userEntered:
- DHCPClientID
- setProxy:userEntered:
- setProxyPort:userEntered:
- proxyAuthenticated
- setProxyAuthenticated:userEntered:
- setProxyUsername:userEntered:
- setProxyPassword:userEntered:
- setProxyType:userEntered:
- pacFile
- setPacFile:userEntered:
- removeCustomIP
- removeCustomRouter
- removeCustomSubnet
- setIPv6Enabled:userEntered:
- IPv6Enabled
- isAdhoc
- BSSID
- isEnterprise
- compareAscending:
- compareUnconfigAscending:
- canAttemptJoin
- setCertificateChain:
- resignActiveNetwork
- certificateChain
- eapolProfile
- eapTypes
- requiresTLSIdentityOnly
- TLSIdentity
- setEapolProfile:
- securityMode
- isHostspot20
- isHostspot20Provisioned
- HS20Data
- WAPIRoot
- WAPIIdentityPEMBlob
- setTLSIdentity:
- setWAPIRoot:
- setWAPIIdentityPEMBlob:
- setRequestedInformation:
- resetCustomSettings
- proxyTypeForDict:
- loadIPv4Dict:
- loadIPv6Dict:
- loadProxyDict:
- loadDNSDict:
- requiresSavedPassword
- setScanResultDictionary:
- needsHotSpot20Query
- setHS20Data:
- HS20Badge
- setSecurityMode:
- setUsername:isManaged:
- initWithWirelessDict:
- setIPv4Dict:
- setProxyDict:
- setDNSDict:
- customSettings
- _initWithDictionary:available:
- _setCustomValue:forKey:protocol:
- setBSSID:
- profileContainsEAPSIM:
- profileContainsEAPAKA:
- profileContainsCarrierEAPType:
- requiresPasswordOnly
- requiresUsernameAndPassword
- setNeedsFavoritesCheck:
- needsFavoritesCheck
- setIsFavorite:
- lastProxyDictionary
- isWAPIEnterprise
- usernameIsManaged
- requestedInformation
- compareDescending:
- isPersonalHotspot
- dirty
- available
- setAvailable:
- proxy
- proxyPort
- proxyUsername
- proxyPassword
- setUsername:
- username
- isFavorite
- age
- hidden
- profile
- setProfile:
- setDirty:
@end
