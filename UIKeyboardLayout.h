@interface UIKeyboardLayout : UIView
{
	id _inputTraits;
	id _screenTraits;
	id _uncommittedTouches;
	id _activeTouch;
	id _shiftKeyTouch;
	id _taskQueue;
}

+ initWithFrame:
+ dealloc
+ setShift:
+ orientation
+ touchesCancelled:withEvent:
+ touchesBegan:withEvent:
+ touchesMoved:withEvent:
+ touchesEnded:withEvent:
+ remoteControlReceivedWithEvent:
+ setRenderConfig:
+ candidateList
+ clearUnusedObjects:
+ hasCandidateKeys
+ hasAccentKey
+ canMultitap
+ isAlphabeticPlane
+ deactivateActiveKeys
+ frameForKeylayoutName:
+ dragGestureSize
+ taskQueue
+ shouldShowIndicator
+ activationIndicatorView
+ performReturnAction
+ currentKeyplane
+ showKeyboardWithInputTraits:screenTraits:splitTraits:
+ setAutoshift:
+ setTaskQueue:
+ shouldFadeFromLayout
+ shouldFadeToLayout
+ fadeWithInvocation:
+ usesAutoShift
+ didClearInput
+ restoreDefaultsForAllKeys
+ updateBackgroundCorners
+ restoreDefaultsForKey:
+ setTarget:forKey:
+ setAction:forKey:
+ setLongPressAction:forKey:
+ setLabel:forKey:
+ longPressAction
+ canProduceString:
+ hitBuffer
+ setReturnKeyEnabled:withDisplayName:withType:
+ ignoresShiftState
+ isShiftKeyPlaneChooser
+ isShiftKeyBeingHeld
+ updateLocalizedKeys:
+ setLayoutTag:
+ baseKeyForString:
+ keyplaneForKey:
+ keyplaneNamed:
+ changeToKeyplane:
+ simulateTouch:
+ simulateTouchForCharacter:errorVector:shouldTypeVariants:baseKeyForVariants:
+ wipeGestureRecognized:
+ addWipeRecognizer
+ handlerForNotification:
+ setActiveTouch:
+ setShiftKeyTouch:
+ touchDown:executionContext:
+ touchDragged:executionContext:
+ clearShiftIfNecessaryForEndedTouch:
+ didCommitTouch:
+ touchUp:executionContext:
+ activeTouch
+ touchCancelled:executionContext:
+ touchesToCommitBeforeTouch:
+ commitTouches:
+ touchDown:
+ touchDragged:
+ canForceTouchCommit:
+ touchUp:
+ touchCancelled:
+ forceUpdatesForCommittedTouch
+ commitTouches:executionContext:
+ performSpaceAction
+ deactivateActiveKeysClearingTouchInfo:clearingDimming:
+ physicalKeyDownWithEvent:
+ physicalKeyUpWithEvent:
+ flickDistance
+ acceptsDirectionInput
+ shiftKeyTouch
- initWithFrame:
- dealloc
- setShift:
- orientation
- touchesCancelled:withEvent:
- touchesBegan:withEvent:
- touchesMoved:withEvent:
- touchesEnded:withEvent:
- remoteControlReceivedWithEvent:
- setRenderConfig:
- candidateList
- clearUnusedObjects:
- hasCandidateKeys
- hasAccentKey
- canMultitap
- isAlphabeticPlane
- deactivateActiveKeys
- frameForKeylayoutName:
- dragGestureSize
- taskQueue
- shouldShowIndicator
- activationIndicatorView
- performReturnAction
- currentKeyplane
- showKeyboardWithInputTraits:screenTraits:splitTraits:
- setAutoshift:
- setTaskQueue:
- shouldFadeFromLayout
- shouldFadeToLayout
- fadeWithInvocation:
- usesAutoShift
- didClearInput
- restoreDefaultsForAllKeys
- updateBackgroundCorners
- restoreDefaultsForKey:
- setTarget:forKey:
- setAction:forKey:
- setLongPressAction:forKey:
- setLabel:forKey:
- longPressAction
- canProduceString:
- hitBuffer
- setReturnKeyEnabled:withDisplayName:withType:
- ignoresShiftState
- isShiftKeyPlaneChooser
- isShiftKeyBeingHeld
- updateLocalizedKeys:
- setLayoutTag:
- baseKeyForString:
- keyplaneForKey:
- keyplaneNamed:
- changeToKeyplane:
- simulateTouch:
- simulateTouchForCharacter:errorVector:shouldTypeVariants:baseKeyForVariants:
- wipeGestureRecognized:
- addWipeRecognizer
- handlerForNotification:
- setActiveTouch:
- setShiftKeyTouch:
- touchDown:executionContext:
- touchDragged:executionContext:
- clearShiftIfNecessaryForEndedTouch:
- didCommitTouch:
- touchUp:executionContext:
- activeTouch
- touchCancelled:executionContext:
- touchesToCommitBeforeTouch:
- commitTouches:
- touchDown:
- touchDragged:
- canForceTouchCommit:
- touchUp:
- touchCancelled:
- forceUpdatesForCommittedTouch
- commitTouches:executionContext:
- performSpaceAction
- deactivateActiveKeysClearingTouchInfo:clearingDimming:
- physicalKeyDownWithEvent:
- physicalKeyUpWithEvent:
- flickDistance
- acceptsDirectionInput
- shiftKeyTouch
@end
