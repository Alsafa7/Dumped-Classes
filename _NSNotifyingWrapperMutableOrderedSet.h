@interface _NSNotifyingWrapperMutableOrderedSet : NSMutableOrderedSet
{
	id _container;
	id _key;
	id _mutableOrderedSet;
}

+ descriptionWithLocale:indent:
+ indexOfObjectWithOptions:passingTest:
+ indexOfObjectAtIndexes:options:passingTest:
+ indexesOfObjectsWithOptions:passingTest:
+ indexesOfObjectsAtIndexes:options:passingTest:
+ getObjects:
+ isSubsetOfSet:
+ isEqualToOrderedSet:
+ addObjects:count:
+ initWithContainer:key:mutableOrderedSet:
+ insertObjects:count:atIndex:
+ sortRange:options:usingComparator:
+ intersectsOrderedSet:
+ reversedOrderedSet
+ setObject:atIndex:
+ replaceObjectsInRange:withObjects:count:
+ intersectOrderedSet:
+ dealloc
+ removeObject:
+ countByEnumeratingWithState:objects:count:
+ count
+ objectAtIndex:
+ addObject:
+ removeAllObjects
+ enumerateObjectsUsingBlock:
+ indexOfObject:
+ description
+ setValue:forKey:
+ lastObject
+ containsObject:
+ valueForKey:
+ array
+ addObjectsFromArray:
+ removeObjectsInArray:
+ intersectSet:
+ set
+ reverseObjectEnumerator
+ minusSet:
+ insertObject:atIndex:
+ removeObjectAtIndex:
+ copyWithZone:
+ sortUsingComparator:
+ objectEnumerator
+ removeObjectsAtIndexes:
+ indexesOfObjectsPassingTest:
+ objectsAtIndexes:
+ valueForKeyPath:
+ enumerateObjectsWithOptions:usingBlock:
+ exchangeObjectAtIndex:withObjectAtIndex:
+ allObjects
+ getObjects:range:
+ replaceObjectAtIndex:withObject:
+ removeObjectsInRange:
+ firstObject
+ indexOfObjectPassingTest:
+ sortWithOptions:usingComparator:
+ unionSet:
+ intersectsSet:
+ mutableCopyWithZone:
+ sortedArrayUsingComparator:
+ indexOfObject:inSortedRange:options:usingComparator:
+ insertObjects:atIndexes:
+ enumerateObjectsAtIndexes:options:usingBlock:
+ replaceObjectsAtIndexes:withObjects:
+ moveObjectsAtIndexes:toIndex:
+ unionOrderedSet:
+ minusOrderedSet:
+ descriptionWithLocale:
+ isSubsetOfOrderedSet:
+ sortedArrayWithOptions:usingComparator:
- descriptionWithLocale:indent:
- indexOfObjectWithOptions:passingTest:
- indexOfObjectAtIndexes:options:passingTest:
- indexesOfObjectsWithOptions:passingTest:
- indexesOfObjectsAtIndexes:options:passingTest:
- getObjects:
- isSubsetOfSet:
- isEqualToOrderedSet:
- addObjects:count:
- initWithContainer:key:mutableOrderedSet:
- insertObjects:count:atIndex:
- sortRange:options:usingComparator:
- intersectsOrderedSet:
- reversedOrderedSet
- setObject:atIndex:
- replaceObjectsInRange:withObjects:count:
- intersectOrderedSet:
- dealloc
- removeObject:
- countByEnumeratingWithState:objects:count:
- count
- objectAtIndex:
- addObject:
- removeAllObjects
- enumerateObjectsUsingBlock:
- indexOfObject:
- description
- setValue:forKey:
- lastObject
- containsObject:
- valueForKey:
- array
- addObjectsFromArray:
- removeObjectsInArray:
- intersectSet:
- set
- reverseObjectEnumerator
- minusSet:
- insertObject:atIndex:
- removeObjectAtIndex:
- copyWithZone:
- sortUsingComparator:
- objectEnumerator
- removeObjectsAtIndexes:
- indexesOfObjectsPassingTest:
- objectsAtIndexes:
- valueForKeyPath:
- enumerateObjectsWithOptions:usingBlock:
- exchangeObjectAtIndex:withObjectAtIndex:
- allObjects
- getObjects:range:
- replaceObjectAtIndex:withObject:
- removeObjectsInRange:
- firstObject
- indexOfObjectPassingTest:
- sortWithOptions:usingComparator:
- unionSet:
- intersectsSet:
- mutableCopyWithZone:
- sortedArrayUsingComparator:
- indexOfObject:inSortedRange:options:usingComparator:
- insertObjects:atIndexes:
- enumerateObjectsAtIndexes:options:usingBlock:
- replaceObjectsAtIndexes:withObjects:
- moveObjectsAtIndexes:toIndex:
- unionOrderedSet:
- minusOrderedSet:
- descriptionWithLocale:
- isSubsetOfOrderedSet:
- sortedArrayWithOptions:usingComparator:
@end
