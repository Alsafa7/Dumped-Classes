@interface GKTurnBasedMatch : NSObject
{
	unsigned int _state;
	id _internal;
	id _participants;
	id _exchanges;
}

+ setInternal:
+ exchangeDataMaximumSize
+ exchangeMaxInitiatedExchangesPerPlayer
+ rematchWithCompletionHandler:
+ exchangeForID:
+ _updateWithInternal:
+ _participantsForInternalRepresentation:
+ _exchangesForInternalRepresentation:participants:
+ exchanges
+ currentPlayer
+ setLocalizableMessageWithKey:arguments:
+ matchDataMaximumSize
+ setCurrentParticipant:
+ previousParticipant
+ endTurnWithNextParticipants:turnTimeout:matchData:completionHandler:
+ indexesForParticipants:
+ participantQuitInTurnWithOutcome:nextParticipants:turnTimeout:matchData:completionHandler:
+ endMatchInTurnWithMatchData:scores:achievements:completionHandler:
+ localPlayerHasRecentTurn
+ completedExchanges
+ endTurnWithNextParticipant:matchData:completionHandler:
+ participantQuitInTurnWithOutcome:nextParticipant:matchData:completionHandler:
+ endMatchInTurnWithMatchData:completionHandler:
+ saveCurrentTurnWithMatchData:completionHandler:
+ saveMergedMatchData:withResolvedExchanges:completionHandler:
+ sendExchangeToParticipants:data:localizableMessageKey:arguments:timeout:completionHandler:
+ sendReminderToParticipants:localizableMessageKey:arguments:completionHandler:
+ game
+ internal
+ dateSortKey
+ currentParticipant
+ activeExchanges
+ firstWinnerOrTiedOrLastLoser
+ previousParticipantOrFirstKnownPlayer
+ localPlayerParticipant
+ participants
+ showcasePlayer
+ initWithInternalRepresentation:
+ playingWithParticipantOrFirstKnownPlayer
+ acceptInviteWithCompletionHandler:
+ declineInviteWithCompletionHandler:
+ isMyTurn
+ loadMatchDataWithCompletionHandler:
+ participantQuitOutOfTurnWithOutcome:withCompletionHandler:
+ removeWithCompletionHandler:
+ dealloc
+ respondsToSelector:
+ init
+ isEqual:
+ hash
+ description
+ state
+ methodSignatureForSelector:
+ setState:
+ forwardingTargetForSelector:
+ message
+ compare:
+ setMessage:
+ valueForUndefinedKey:
+ status
+ setValue:forUndefinedKey:
- setInternal:
- exchangeDataMaximumSize
- exchangeMaxInitiatedExchangesPerPlayer
- rematchWithCompletionHandler:
- exchangeForID:
- _updateWithInternal:
- _participantsForInternalRepresentation:
- _exchangesForInternalRepresentation:participants:
- exchanges
- currentPlayer
- setLocalizableMessageWithKey:arguments:
- matchDataMaximumSize
- setCurrentParticipant:
- previousParticipant
- endTurnWithNextParticipants:turnTimeout:matchData:completionHandler:
- indexesForParticipants:
- participantQuitInTurnWithOutcome:nextParticipants:turnTimeout:matchData:completionHandler:
- endMatchInTurnWithMatchData:scores:achievements:completionHandler:
- localPlayerHasRecentTurn
- completedExchanges
- endTurnWithNextParticipant:matchData:completionHandler:
- participantQuitInTurnWithOutcome:nextParticipant:matchData:completionHandler:
- endMatchInTurnWithMatchData:completionHandler:
- saveCurrentTurnWithMatchData:completionHandler:
- saveMergedMatchData:withResolvedExchanges:completionHandler:
- sendExchangeToParticipants:data:localizableMessageKey:arguments:timeout:completionHandler:
- sendReminderToParticipants:localizableMessageKey:arguments:completionHandler:
- game
- internal
- dateSortKey
- currentParticipant
- activeExchanges
- firstWinnerOrTiedOrLastLoser
- previousParticipantOrFirstKnownPlayer
- localPlayerParticipant
- participants
- showcasePlayer
- initWithInternalRepresentation:
- playingWithParticipantOrFirstKnownPlayer
- acceptInviteWithCompletionHandler:
- declineInviteWithCompletionHandler:
- isMyTurn
- loadMatchDataWithCompletionHandler:
- participantQuitOutOfTurnWithOutcome:withCompletionHandler:
- removeWithCompletionHandler:
- dealloc
- respondsToSelector:
- init
- isEqual:
- hash
- description
- state
- methodSignatureForSelector:
- setState:
- forwardingTargetForSelector:
- message
- compare:
- setMessage:
- valueForUndefinedKey:
- status
- setValue:forUndefinedKey:
@end
