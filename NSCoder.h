@interface NSCoder : NSObject
{

}

+ _copyDecodedObjectForKey:ofClass:
+ encodeCGPoint:forKey:
+ encodeCGSize:forKey:
+ encodeCGRect:forKey:
+ encodeCGAffineTransform:forKey:
+ encodeUIEdgeInsets:forKey:
+ encodeUIOffset:forKey:
+ decodeCGPointForKey:
+ decodeCGSizeForKey:
+ decodeCGRectForKey:
+ decodeCGAffineTransformForKey:
+ decodeUIEdgeInsetsForKey:
+ decodeUIOffsetForKey:
+ encodePoint:forKey:
+ decodePointForKey:
+ decodeSizeForKey:
+ encodeSize:forKey:
+ encodeRect:forKey:
+ decodeRectForKey:
+ encodePoint:
+ decodePoint
+ encodeSize:
+ decodeSize
+ encodeRect:
+ decodeRect
+ CA_encodeCGFloatArray:count:forKey:
+ CA_decodeCGFloatArray:count:forKey:
+ CA_encodeObject:forKey:conditional:
+ CA_decodeObjectForKey:
+ encodeCMTime:forKey:
+ decodeCMTimeForKey:
+ encodeCMTimeRange:forKey:
+ decodeCMTimeRangeForKey:
+ encodeCMTimeMapping:forKey:
+ decodeCMTimeMappingForKey:
+ safeDecodeStringForKey:
+ safeDecodeSetForKey:valueClass:
+ safeDecodeObjectForKey:expectedClass:
+ safeDecodeDateForKey:
+ safeDecodeDictionaryForKey:keyClass:valueClass:
+ safeDecodeArrayForKey:valueClass:
+ safeDecodeNumberForKey:
+ _safeDecodeContainerForKey:containerClass:valueClass:
+ encodeTheme:
+ encodeTheme:forKey:
+ decodeTheme
+ decodeThemeForKey:
+ decodeCGVectorForKey:
+ encodeCGVector:forKey:
+ encodeCGPoint:forKey:
+ encodeCGSize:forKey:
+ encodeCGRect:forKey:
+ decodeCGPointForKey:
+ decodeCGSizeForKey:
+ decodeCGRectForKey:
+ safeEncodeUIColor:forKey:
+ decodeObjectOfClasses:forKey:
+ encodeInt64:forKey:
+ allowedClasses
+ encodeValueOfObjCType:at:
+ encodeArrayOfObjCType:count:at:
+ encodeValuesOfObjCTypes:
+ encodeBytes:length:
+ encodeDataObject:
+ setObjectZone:
+ objectZone
+ encodeBycopyObject:
+ requiresSecureCoding
+ _validateAllowedClass:forKey:allowingInvocations:
+ validateClassSupportsSecureCoding:
+ encodeByrefObject:
+ encodeLong:forKey:
+ decodeLongForKey:
+ setAllowedClasses:
+ decodePropertyListForKey:
+ validateAllowedClass:forKey:
+ decodeObjectForKey:
+ decodeBoolForKey:
+ containsValueForKey:
+ encodeObject:forKey:
+ encodeBool:forKey:
+ encodeInt:forKey:
+ systemVersion
+ decodeIntForKey:
+ allowsKeyedCoding
+ decodeIntegerForKey:
+ decodeBytesForKey:returnedLength:
+ decodeFloatForKey:
+ encodeInteger:forKey:
+ encodeBytes:length:forKey:
+ encodeFloat:forKey:
+ decodeObjectOfClass:forKey:
+ encodeConditionalObject:forKey:
+ decodeDoubleForKey:
+ encodeDouble:forKey:
+ decodeInt64ForKey:
+ decodeValueOfObjCType:at:
+ decodeInt32ForKey:
+ decodeDataObject
+ decodeObject
+ decodeValuesOfObjCTypes:
+ decodeArrayOfObjCType:count:at:
+ decodeBytesWithReturnedLength:
+ versionForClassName:
+ encodeInt32:forKey:
+ encodeRootObject:
+ encodeConditionalObject:
+ encodeObject:
- _copyDecodedObjectForKey:ofClass:
- encodeCGPoint:forKey:
- encodeCGSize:forKey:
- encodeCGRect:forKey:
- encodeCGAffineTransform:forKey:
- encodeUIEdgeInsets:forKey:
- encodeUIOffset:forKey:
- decodeCGPointForKey:
- decodeCGSizeForKey:
- decodeCGRectForKey:
- decodeCGAffineTransformForKey:
- decodeUIEdgeInsetsForKey:
- decodeUIOffsetForKey:
- encodePoint:forKey:
- decodePointForKey:
- decodeSizeForKey:
- encodeSize:forKey:
- encodeRect:forKey:
- decodeRectForKey:
- encodePoint:
- decodePoint
- encodeSize:
- decodeSize
- encodeRect:
- decodeRect
- CA_encodeCGFloatArray:count:forKey:
- CA_decodeCGFloatArray:count:forKey:
- CA_encodeObject:forKey:conditional:
- CA_decodeObjectForKey:
- encodeCMTime:forKey:
- decodeCMTimeForKey:
- encodeCMTimeRange:forKey:
- decodeCMTimeRangeForKey:
- encodeCMTimeMapping:forKey:
- decodeCMTimeMappingForKey:
- safeDecodeStringForKey:
- safeDecodeSetForKey:valueClass:
- safeDecodeObjectForKey:expectedClass:
- safeDecodeDateForKey:
- safeDecodeDictionaryForKey:keyClass:valueClass:
- safeDecodeArrayForKey:valueClass:
- safeDecodeNumberForKey:
- _safeDecodeContainerForKey:containerClass:valueClass:
- encodeTheme:
- encodeTheme:forKey:
- decodeTheme
- decodeThemeForKey:
- decodeCGVectorForKey:
- encodeCGVector:forKey:
- encodeCGPoint:forKey:
- encodeCGSize:forKey:
- encodeCGRect:forKey:
- decodeCGPointForKey:
- decodeCGSizeForKey:
- decodeCGRectForKey:
- safeEncodeUIColor:forKey:
- decodeObjectOfClasses:forKey:
- encodeInt64:forKey:
- allowedClasses
- encodeValueOfObjCType:at:
- encodeArrayOfObjCType:count:at:
- encodeValuesOfObjCTypes:
- encodeBytes:length:
- encodeDataObject:
- setObjectZone:
- objectZone
- encodeBycopyObject:
- requiresSecureCoding
- _validateAllowedClass:forKey:allowingInvocations:
- validateClassSupportsSecureCoding:
- encodeByrefObject:
- encodeLong:forKey:
- decodeLongForKey:
- setAllowedClasses:
- decodePropertyListForKey:
- validateAllowedClass:forKey:
- decodeObjectForKey:
- decodeBoolForKey:
- containsValueForKey:
- encodeObject:forKey:
- encodeBool:forKey:
- encodeInt:forKey:
- systemVersion
- decodeIntForKey:
- allowsKeyedCoding
- decodeIntegerForKey:
- decodeBytesForKey:returnedLength:
- decodeFloatForKey:
- encodeInteger:forKey:
- encodeBytes:length:forKey:
- encodeFloat:forKey:
- decodeObjectOfClass:forKey:
- encodeConditionalObject:forKey:
- decodeDoubleForKey:
- encodeDouble:forKey:
- decodeInt64ForKey:
- decodeValueOfObjCType:at:
- decodeInt32ForKey:
- decodeDataObject
- decodeObject
- decodeValuesOfObjCTypes:
- decodeArrayOfObjCType:count:at:
- decodeBytesWithReturnedLength:
- versionForClassName:
- encodeInt32:forKey:
- encodeRootObject:
- encodeConditionalObject:
- encodeObject:
@end
