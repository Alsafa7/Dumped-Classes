@interface AVController : NSObject
{
	pointer _priv;
}

+ vibrationPattern
+ setVibrationPattern:
+ vibrationEnabled
+ setVibrationEnabled:
+ stepByCount:
+ currentTime
+ repeatMode
+ setRepeatMode:
+ setCurrentTime:options:
+ setCurrentTime:
+ seekToDate:
+ muted
+ isCurrentItemReady
+ setEQPreset:
+ setMuted:
+ attributeForKey:
+ dealloc
+ setDelegate:
+ init
+ delegate
+ isValid
+ setLayer:
+ currentItem
+ pause
+ setAttribute:forKey:error:
+ initWithQueue:error:
+ makeCurrentItemReady
+ grabCGImageAtTime:withTimeOptions:withImageOptions:actualTime:
+ eqPreset
+ okToNotifyFromThisThread
+ activate:
+ makeError:withDescription:code:
+ initWithQueue:fmpType:error:
+ _figPlayerNotifications
+ checkQueueSpace
+ addNextFeederItemToQueue
+ queueFeeder
+ playNextItem:
+ feederRangeWasInserted:
+ feederRangeWasRemoved:
+ feederInvalidatedWithCurrentItemMoved:
+ setQueueFeeder:withIndex:
+ applyDesiredRepeatMode
+ continueAfterRepeatGap
+ setRate:error:
+ dequeueFirstItem
+ currentFPItem
+ cancelContinueAfterRepeatGap
+ shouldBeginPlayingItem:error:
+ errorWithDescription:code:
+ lkLayer
+ shouldDisplayClosedCaptions
+ setVisualContext:
+ updateActionAtEnd
+ setOutputQTESFilePath:
+ setShouldDisplayClosedCaptions:
+ setSubtitleRecipient:
+ setApplyVideoTrackMatrix
+ requestAsyncCGImagesAtTimes:requestIDs:withTimeOptions:withImageOptions:
+ scheduleUpdateTimeMarkerObservations
+ scheduleQueueSpaceCheck
+ avPlaybackQueueCurrentItemChangedNotification:
+ updateTimeMarkerObservations
+ removeObserver:fromTMOArray:
+ ensurePlaybackQueueImmed
+ outputQTESFilePath
+ logPerformanceDataForCurrentItem
+ currentItemWillChangeToItem:oldItemCurrentTime:
+ rateDidChangeToRate:
+ currentItemHasChanged:
+ fpItemNotification:sender:
+ itemHasFinishedPlayingNotification:
+ beginRepeatGap
+ fmpEffectiveVolumeDidChange
+ safeSubtitleCommandPosted:
+ setAVItemClass:
+ initForStreaming
+ privateStorage
+ isNewImageAvailableForTime:willNeverBeAvailable:
+ copyImageForTime:time:
+ setQueueFeeder:
+ havePlayedCurrentItem
+ indexOfCurrentQueueFeederItem
+ setIndexOfCurrentQueueFeederItem:error:
+ resumePlayback:error:
+ beginInterruption:
+ canBeginInterruption
+ endInterruptionWithStatus:
+ visualContext
+ requestAsyncCGImagesAtTimes:withTimeOptions:withImageOptions:
+ cancelAllCGImageRequests
+ registerTimeMarkerObserver:forItem:times:context:
+ unregisterTimeMarkerObserver:forItem:
+ bookmarkGroupIDForAVItem:
+ bookmarkTimeForAVItem:
+ createItemWithURL:flags:error:
+ setPickedRouteWithPassword:withPassword:
+ dequeueDeadItem
+ figPlayerNotificationHandler:
+ queue
+ setQueue:
+ play:
+ rate
+ volume
+ setVolume:
+ initWithError:
- vibrationPattern
- setVibrationPattern:
- vibrationEnabled
- setVibrationEnabled:
- stepByCount:
- currentTime
- repeatMode
- setRepeatMode:
- setCurrentTime:options:
- setCurrentTime:
- seekToDate:
- muted
- isCurrentItemReady
- setEQPreset:
- setMuted:
- attributeForKey:
- dealloc
- setDelegate:
- init
- delegate
- isValid
- setLayer:
- currentItem
- pause
- setAttribute:forKey:error:
- initWithQueue:error:
- makeCurrentItemReady
- grabCGImageAtTime:withTimeOptions:withImageOptions:actualTime:
- eqPreset
- okToNotifyFromThisThread
- activate:
- makeError:withDescription:code:
- initWithQueue:fmpType:error:
- _figPlayerNotifications
- checkQueueSpace
- addNextFeederItemToQueue
- queueFeeder
- playNextItem:
- feederRangeWasInserted:
- feederRangeWasRemoved:
- feederInvalidatedWithCurrentItemMoved:
- setQueueFeeder:withIndex:
- applyDesiredRepeatMode
- continueAfterRepeatGap
- setRate:error:
- dequeueFirstItem
- currentFPItem
- cancelContinueAfterRepeatGap
- shouldBeginPlayingItem:error:
- errorWithDescription:code:
- lkLayer
- shouldDisplayClosedCaptions
- setVisualContext:
- updateActionAtEnd
- setOutputQTESFilePath:
- setShouldDisplayClosedCaptions:
- setSubtitleRecipient:
- setApplyVideoTrackMatrix
- requestAsyncCGImagesAtTimes:requestIDs:withTimeOptions:withImageOptions:
- scheduleUpdateTimeMarkerObservations
- scheduleQueueSpaceCheck
- avPlaybackQueueCurrentItemChangedNotification:
- updateTimeMarkerObservations
- removeObserver:fromTMOArray:
- ensurePlaybackQueueImmed
- outputQTESFilePath
- logPerformanceDataForCurrentItem
- currentItemWillChangeToItem:oldItemCurrentTime:
- rateDidChangeToRate:
- currentItemHasChanged:
- fpItemNotification:sender:
- itemHasFinishedPlayingNotification:
- beginRepeatGap
- fmpEffectiveVolumeDidChange
- safeSubtitleCommandPosted:
- setAVItemClass:
- initForStreaming
- privateStorage
- isNewImageAvailableForTime:willNeverBeAvailable:
- copyImageForTime:time:
- setQueueFeeder:
- havePlayedCurrentItem
- indexOfCurrentQueueFeederItem
- setIndexOfCurrentQueueFeederItem:error:
- resumePlayback:error:
- beginInterruption:
- canBeginInterruption
- endInterruptionWithStatus:
- visualContext
- requestAsyncCGImagesAtTimes:withTimeOptions:withImageOptions:
- cancelAllCGImageRequests
- registerTimeMarkerObserver:forItem:times:context:
- unregisterTimeMarkerObserver:forItem:
- bookmarkGroupIDForAVItem:
- bookmarkTimeForAVItem:
- createItemWithURL:flags:error:
- setPickedRouteWithPassword:withPassword:
- dequeueDeadItem
- figPlayerNotificationHandler:
- queue
- setQueue:
- play:
- rate
- volume
- setVolume:
- initWithError:
@end
