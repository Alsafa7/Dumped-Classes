@interface EKEvent : EKCalendarItem
{
	BOOL _occurrenceIsAllDay;
	BOOL _requiresDetachDueToSnoozedAlarm;
	int _attendeeCount;
	id _occurrenceStartDate;
	id _occurrenceEndDate;
	id _originalOccurrenceStartDate;
	id _originalOccurrenceEndDate;
	id _originalOccurrenceIsAllDay;
}

+ daySpan
+ sortedEKAttachmentsDisplayStrings
+ sortEKParticipantsIgnoringNonHumans:
+ sortedEKParticipantsDisplayStringsIgnoringNonHumans:
+ _sortedEKParticipantsForSortingIgnoringNonHumans:
+ hasHumanInviteesToDisplay
+ isAllDay
+ canSetAvailability
+ initWithPersistentObject:
+ eventStore
+ didCommit
+ initWithPersistentObject:occurrenceDate:
+ validateWithSpan:error:
+ commitWithSpan:error:
+ removeWithSpan:error:
+ clearInvitationStatus
+ invitationStatus
+ setInvitationStatus:
+ externalURI
+ initWithEventStore:
+ setOccurrenceStartDate:
+ setOccurrenceEndDate:
+ _isAllDay
+ setOccurrenceIsAllDay:
+ _persistentEvent
+ eventIdentifier
+ externalURL
+ exportToICS
+ originalOccurrenceStartDate
+ occurrenceStartDate
+ originalOccurrenceEndDate
+ committedValueForKey:
+ birthdayPersonID
+ initialStartDate
+ startCalendarDate
+ setOriginalOccurrenceIsAllDay:
+ setAllDay:
+ setOriginalOccurrenceStartDate:
+ occurrenceEndDate
+ setOriginalOccurrenceEndDate:
+ _effectiveTimeZone
+ _gregorianDateCorrectedForTimeZoneFromCalendarDate:orNSDate:
+ startDateGr
+ endDateGr
+ modifiedProperties
+ setModifiedProperties:
+ setAvailability:
+ setNeedsOccurrenceCacheUpdate:
+ participationStatus
+ attendees
+ organizer
+ canMoveToCalendar:fromCalendar:error:
+ _validateDurationConstrainedToRecurrenceInterval
+ _validateAlarmIntervalConstrainedToRecurrenceInterval:
+ isDetached
+ allowsCalendarModifications
+ responseMustApplyToAll
+ isDirtyIgnoringCalendar
+ requiresDetach
+ isAllDayDirty
+ pendingParticipationStatus
+ participationStatusModifiedDate
+ allowsAlarmModifications
+ _sendModifiedNote
+ setRequiresDetachDueToSnoozedAlarm:
+ _validateDatesAndRecurrencesGivenSpan:error:
+ allowsRecurrenceModifications
+ requiresDetachDueToSnoozedAlarm
+ _isInitialOccurrenceDate:
+ _detachWithStartDate:newStartDate:future:
+ setParticipationStatus:
+ occurrenceIsAllDay
+ originalOccurrenceIsAllDay
+ _checkStartDateConstraintAgainstDate:timeZone:error:
+ _occurrenceExistsOnDate:timeZone:
+ startDatePinnedForAllDay
+ endDatePinnedForAllDay
+ _deleteThisOccurrence
+ _shouldCancelInsteadOfDeleteWithSpan:
+ _cancelWithSpan:error:
+ _shouldDeclineInsteadOfDelete
+ _deleteWithSpan:error:
+ isStatusDirty
+ isStartDateDirty
+ isEndDateDirty
+ endCalendarDate
+ occurrenceDate
+ initialEndDate
+ needsOccurrenceCacheUpdate
+ _parentParticipationStatus
+ recurrenceRule
+ setRecurrenceRule:
+ availability
+ responseComment
+ setResponseComment:
+ dateChanged
+ timeChanged
+ titleChanged
+ locationChanged
+ isTentative
+ compareStartDateWithEvent:
+ canDetachSingleOccurrence
+ changingAllDayPropertyIsAllowed
+ hasSelfAttendee
+ canBeRespondedTo
+ snoozeAlarm:withTimeIntervalFromNow:
+ dirtyPropertiesToSkip
+ revert
+ _dateForNextOccurrence
+ attendeeCount
+ dealloc
+ init
+ isEqual:
+ hash
+ description
+ duration
+ setTimeZone:
+ title
+ uniqueId
+ status
+ attachments
+ refresh
+ startDate
+ endDate
+ rollback
+ setStartDate:
+ setEndDate:
- daySpan
- sortedEKAttachmentsDisplayStrings
- sortEKParticipantsIgnoringNonHumans:
- sortedEKParticipantsDisplayStringsIgnoringNonHumans:
- _sortedEKParticipantsForSortingIgnoringNonHumans:
- hasHumanInviteesToDisplay
- isAllDay
- canSetAvailability
- initWithPersistentObject:
- eventStore
- didCommit
- initWithPersistentObject:occurrenceDate:
- validateWithSpan:error:
- commitWithSpan:error:
- removeWithSpan:error:
- clearInvitationStatus
- invitationStatus
- setInvitationStatus:
- externalURI
- initWithEventStore:
- setOccurrenceStartDate:
- setOccurrenceEndDate:
- _isAllDay
- setOccurrenceIsAllDay:
- _persistentEvent
- eventIdentifier
- externalURL
- exportToICS
- originalOccurrenceStartDate
- occurrenceStartDate
- originalOccurrenceEndDate
- committedValueForKey:
- birthdayPersonID
- initialStartDate
- startCalendarDate
- setOriginalOccurrenceIsAllDay:
- setAllDay:
- setOriginalOccurrenceStartDate:
- occurrenceEndDate
- setOriginalOccurrenceEndDate:
- _effectiveTimeZone
- _gregorianDateCorrectedForTimeZoneFromCalendarDate:orNSDate:
- startDateGr
- endDateGr
- modifiedProperties
- setModifiedProperties:
- setAvailability:
- setNeedsOccurrenceCacheUpdate:
- participationStatus
- attendees
- organizer
- canMoveToCalendar:fromCalendar:error:
- _validateDurationConstrainedToRecurrenceInterval
- _validateAlarmIntervalConstrainedToRecurrenceInterval:
- isDetached
- allowsCalendarModifications
- responseMustApplyToAll
- isDirtyIgnoringCalendar
- requiresDetach
- isAllDayDirty
- pendingParticipationStatus
- participationStatusModifiedDate
- allowsAlarmModifications
- _sendModifiedNote
- setRequiresDetachDueToSnoozedAlarm:
- _validateDatesAndRecurrencesGivenSpan:error:
- allowsRecurrenceModifications
- requiresDetachDueToSnoozedAlarm
- _isInitialOccurrenceDate:
- _detachWithStartDate:newStartDate:future:
- setParticipationStatus:
- occurrenceIsAllDay
- originalOccurrenceIsAllDay
- _checkStartDateConstraintAgainstDate:timeZone:error:
- _occurrenceExistsOnDate:timeZone:
- startDatePinnedForAllDay
- endDatePinnedForAllDay
- _deleteThisOccurrence
- _shouldCancelInsteadOfDeleteWithSpan:
- _cancelWithSpan:error:
- _shouldDeclineInsteadOfDelete
- _deleteWithSpan:error:
- isStatusDirty
- isStartDateDirty
- isEndDateDirty
- endCalendarDate
- occurrenceDate
- initialEndDate
- needsOccurrenceCacheUpdate
- _parentParticipationStatus
- recurrenceRule
- setRecurrenceRule:
- availability
- responseComment
- setResponseComment:
- dateChanged
- timeChanged
- titleChanged
- locationChanged
- isTentative
- compareStartDateWithEvent:
- canDetachSingleOccurrence
- changingAllDayPropertyIsAllowed
- hasSelfAttendee
- canBeRespondedTo
- snoozeAlarm:withTimeIntervalFromNow:
- dirtyPropertiesToSkip
- revert
- _dateForNextOccurrence
- attendeeCount
- dealloc
- init
- isEqual:
- hash
- description
- duration
- setTimeZone:
- title
- uniqueId
- status
- attachments
- refresh
- startDate
- endDate
- rollback
- setStartDate:
- setEndDate:
@end
