@interface SBUserAgent : NSObject
{
	id _modalAlertRegistry;
}

+ setIdleTimerDisabled:forReason:
+ setIdleText:
+ foregroundApplicationDisplayID
+ _openApplication:withURL:fromSource:animated:options:
+ canLaunchFromSource:withURL:bundleID:
+ _safeValue:forKey:ofType:
+ _cleanupFromBannerLaunch
+ _launchFromSource:withURL:bundleID:allowUnlock:animate:
+ undimScreen
+ lockAndDimDeviceDisconnectingCallIfNecessary:andDimScreen:
+ playRingtoneAtPath:vibrationPattern:
+ activateRemoteAlertService:options:
+ foregroundDisplayID
+ topSuspendedEventsOnlyDisplayID
+ localizedDisplayNameForDisplayID:
+ applicationInstalledForDisplayID:
+ deviceIsPasscodeLockedRemotely
+ deviceIsBlocked
+ deviceIsTethered
+ lockScreenIsShowing
+ networkUsageTypeForAppWithDisplayID:
+ alertIsActive
+ canUserLaunchIcon
+ openURL:allowUnlock:animated:
+ openURL:animateIn:scale:start:duration:animateOut:
+ launchApplicationFromSource:withURL:options:
+ launchFromSource:withURL:bundleID:allowUnlock:
+ canLaunchFromAwayViewPluginWithURL:bundleID:
+ launchFromAwayViewPluginWithURL:bundleID:allowUnlock:animate:
+ defaultContentRegionForAwayViewPlugin:withOrientation:
+ updateLockScreenInterfaceIfNecessary
+ dimScreen:
+ isIdleTimerDisabledForReason:
+ lockAndDimDeviceDisconnectingCallIfNecessary:
+ setBadgeNumberOrString:forApplicationWithID:
+ playRingtoneAtPath:
+ stopRinging
+ prepareToAnswerCall
+ setFlipBackAttributeForSEODisplayWithIdentifier:
+ launchDisplayWithURL:forCall:sender:
+ modalBulletinAlertHandlerRegistry
+ activateModalBulletinAlert:
+ addActiveInterfaceOrientationObserver:
+ removeActiveInterfaceOrientationObserver:
+ notifyOnNextUserEvent
+ setMinimumBacklightLevel:animated:
+ activateStarkRemoteAlertService:ofType:
+ enableLockScreenBundleNamed:activationContext:
+ disableLockScreenBundleNamed:deactivationContext:
+ lockAndDimDevice
+ isUsingLegacyStyle
+ dealloc
+ init
+ activeInterfaceOrientation
+ deviceIsPasscodeLocked
+ launchApplicationFromSource:withDisplayID:options:
+ deviceIsLocked
+ setWallpaperTunnelActive:forFullscreenAlertController:
+ updateInterfaceOrientationIfNecessary
+ springBoardIsActive
+ canLaunchFromBulletinWithURL:bundleID:
+ launchFromBulletinWithURL:bundleID:allowUnlock:animate:launchOrigin:
+ launchFromPushOrLocalBulletin:origin:
+ isSBUILoggingEnabled
- setIdleTimerDisabled:forReason:
- setIdleText:
- foregroundApplicationDisplayID
- _openApplication:withURL:fromSource:animated:options:
- canLaunchFromSource:withURL:bundleID:
- _safeValue:forKey:ofType:
- _cleanupFromBannerLaunch
- _launchFromSource:withURL:bundleID:allowUnlock:animate:
- undimScreen
- lockAndDimDeviceDisconnectingCallIfNecessary:andDimScreen:
- playRingtoneAtPath:vibrationPattern:
- activateRemoteAlertService:options:
- foregroundDisplayID
- topSuspendedEventsOnlyDisplayID
- localizedDisplayNameForDisplayID:
- applicationInstalledForDisplayID:
- deviceIsPasscodeLockedRemotely
- deviceIsBlocked
- deviceIsTethered
- lockScreenIsShowing
- networkUsageTypeForAppWithDisplayID:
- alertIsActive
- canUserLaunchIcon
- openURL:allowUnlock:animated:
- openURL:animateIn:scale:start:duration:animateOut:
- launchApplicationFromSource:withURL:options:
- launchFromSource:withURL:bundleID:allowUnlock:
- canLaunchFromAwayViewPluginWithURL:bundleID:
- launchFromAwayViewPluginWithURL:bundleID:allowUnlock:animate:
- defaultContentRegionForAwayViewPlugin:withOrientation:
- updateLockScreenInterfaceIfNecessary
- dimScreen:
- isIdleTimerDisabledForReason:
- lockAndDimDeviceDisconnectingCallIfNecessary:
- setBadgeNumberOrString:forApplicationWithID:
- playRingtoneAtPath:
- stopRinging
- prepareToAnswerCall
- setFlipBackAttributeForSEODisplayWithIdentifier:
- launchDisplayWithURL:forCall:sender:
- modalBulletinAlertHandlerRegistry
- activateModalBulletinAlert:
- addActiveInterfaceOrientationObserver:
- removeActiveInterfaceOrientationObserver:
- notifyOnNextUserEvent
- setMinimumBacklightLevel:animated:
- activateStarkRemoteAlertService:ofType:
- enableLockScreenBundleNamed:activationContext:
- disableLockScreenBundleNamed:deactivationContext:
- lockAndDimDevice
- isUsingLegacyStyle
- dealloc
- init
- activeInterfaceOrientation
- deviceIsPasscodeLocked
- launchApplicationFromSource:withDisplayID:options:
- deviceIsLocked
- setWallpaperTunnelActive:forFullscreenAlertController:
- updateInterfaceOrientationIfNecessary
- springBoardIsActive
- canLaunchFromBulletinWithURL:bundleID:
- launchFromBulletinWithURL:bundleID:allowUnlock:animate:launchOrigin:
- launchFromPushOrLocalBulletin:origin:
- isSBUILoggingEnabled
@end
